package priori;

import java.util.ArrayList;
import java.util.HashMap;

public class Generator {
	private ArrayList<String[]> transactionData;
	private ArrayList<HashMap<String,Integer>> combinations;
	private ItemSet itemSet;
	private int level;
	
	public Generator(String transactionFile, String itemsFile) {
		TransactionSet transactions = new TransactionSet(transactionFile);
		this.transactionData = transactions.getItemsArray();
		this.itemSet = new ItemSet(itemsFile);
		this.combinations = new ArrayList<HashMap<String,Integer>>();
		this.level = 1;
		this.transactionValidation();
	}
	
	private void transactionValidation() {
		// Check for the existence of items in transactions
		// transactions that contain items that don't exist will be dropped
		ArrayList<Integer> index = new ArrayList<Integer>();
		for(int i=0; i< transactionData.size(); i++) {
			for(String item : transactionData.get(i)) {
				if(!itemSet.checkExistence(item)) {
					index.add(i);
				}
			}
		}
		// Drop transactions corresponding to the index #s recorded in index array
		for(Integer i : index) {
			transactionData.remove(i);
		}
	}
	
	public RuleSet generate(double minConfidenceLev, double minSupportLev) {
		// all the Apriori algorithm code goes here
		combinations.add(new HashMap<String,Integer>());
		for(String[] trans : transactionData) {
			for(String s : trans) {
				Integer count = combinations.get(level).get(s);
				if(count != null) {
					combinations.get(level).put(s, count + 1);
				} else {
					combinations.get(level).put(s, 1);
				}
			}
		}
		System.out.println(combinations.get(level));
		return null;
	}
	
	public static void main(String[] args) {
		Generator generator = new Generator("./Transactions.txt", "./Items.txt");
		RuleSet rules = generator.generate(0.5, 0.5);
	}
}
